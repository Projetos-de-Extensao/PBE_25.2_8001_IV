# Generated by Django 5.2.7 on 2025-10-18 11:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ativo', models.BooleanField(db_index=True, default=True, verbose_name='ativo')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='nome')),
                ('codigo', models.CharField(blank=True, max_length=20, unique=True, verbose_name='código')),
                ('descricao', models.TextField(blank=True, verbose_name='descrição')),
            ],
            options={
                'verbose_name': 'curso',
                'verbose_name_plural': 'cursos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='AlunoProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ativo', models.BooleanField(db_index=True, default=True, verbose_name='ativo')),
                ('matricula', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='matrícula')),
                ('data_ingresso', models.DateField(verbose_name='data de ingresso')),
                ('periodo', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='período')),
                ('cr_geral', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='CR geral')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='telefone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='aluno', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='alunos', to='gestao_monitoria.curso', verbose_name='curso')),
            ],
            options={
                'verbose_name': 'aluno',
                'verbose_name_plural': 'alunos',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='FuncionarioProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ativo', models.BooleanField(db_index=True, default=True, verbose_name='ativo')),
                ('matricula', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='matrícula')),
                ('departamento', models.CharField(blank=True, max_length=100, verbose_name='departamento')),
                ('coordenador', models.BooleanField(default=False, verbose_name='é coordenador')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='telefone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='funcionario', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'funcionário',
                'verbose_name_plural': 'funcionários',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], db_index=True, default='pendente', max_length=20, verbose_name='status')),
                ('justificativa', models.TextField(blank=True, verbose_name='justificativa')),
                ('data_avaliacao', models.DateTimeField(blank=True, null=True, verbose_name='data de avaliação')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscricoes', to='gestao_monitoria.alunoprofile', verbose_name='aluno')),
                ('avaliado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inscricoes_avaliadas', to='gestao_monitoria.funcionarioprofile', verbose_name='avaliado por')),
            ],
            options={
                'verbose_name': 'inscrição',
                'verbose_name_plural': 'inscrições',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ativo', models.BooleanField(db_index=True, default=True, verbose_name='ativo')),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='número')),
                ('bloco', models.CharField(blank=True, max_length=10, verbose_name='bloco')),
                ('capacidade', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='capacidade')),
                ('observacoes', models.TextField(blank=True, verbose_name='observações')),
            ],
            options={
                'verbose_name': 'sala',
                'verbose_name_plural': 'salas',
                'ordering': ['numero'],
                'indexes': [models.Index(fields=['numero', 'ativo'], name='gestao_moni_numero_6708a9_idx')],
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ativo', models.BooleanField(db_index=True, default=True, verbose_name='ativo')),
                ('nome', models.CharField(max_length=150, verbose_name='nome')),
                ('descricao', models.TextField(blank=True, verbose_name='descrição')),
                ('data_inicio', models.DateField(verbose_name='data de início')),
                ('data_fim', models.DateField(verbose_name='data de término')),
                ('hora_inicio', models.TimeField(verbose_name='hora de início')),
                ('hora_fim', models.TimeField(verbose_name='hora de término')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='gestao_monitoria.curso', verbose_name='curso')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='turmas_monitoria', to='gestao_monitoria.alunoprofile', verbose_name='monitor')),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='turmas', to='gestao_monitoria.sala', verbose_name='sala')),
            ],
            options={
                'verbose_name': 'turma de monitoria',
                'verbose_name_plural': 'turmas de monitoria',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='SubmissaoHoras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('mes_referencia', models.DateField(verbose_name='mês de referência')),
                ('total_horas', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='total de horas')),
                ('descricao_atividades', models.TextField(verbose_name='descrição das atividades')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], db_index=True, default='pendente', max_length=20, verbose_name='status')),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True, verbose_name='data de aprovação')),
                ('observacoes', models.TextField(blank=True, verbose_name='observações')),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aprovacoes_horas', to='gestao_monitoria.funcionarioprofile', verbose_name='aprovado por')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissoes_horas', to='gestao_monitoria.alunoprofile', verbose_name='monitor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissoes_horas', to='gestao_monitoria.turma', verbose_name='turma')),
            ],
            options={
                'verbose_name': 'submissão de horas',
                'verbose_name_plural': 'submissões de horas',
                'ordering': ['-mes_referencia'],
            },
        ),
        migrations.CreateModel(
            name='Presenca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('data', models.DateField(verbose_name='data')),
                ('presente', models.BooleanField(default=False, verbose_name='presente')),
                ('observacoes', models.TextField(blank=True, verbose_name='observações')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presencas', to='gestao_monitoria.alunoprofile', verbose_name='aluno')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presencas', to='gestao_monitoria.turma', verbose_name='turma')),
            ],
            options={
                'verbose_name': 'presença',
                'verbose_name_plural': 'presenças',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='ParticipacaoMonitoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ap1', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='AP1')),
                ('ap2', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='AP2')),
                ('cr', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='CR')),
                ('observacoes', models.TextField(blank=True, verbose_name='observações')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participacoes', to='gestao_monitoria.alunoprofile', verbose_name='aluno')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participacoes', to='gestao_monitoria.turma', verbose_name='turma')),
            ],
            options={
                'verbose_name': 'participação em monitoria',
                'verbose_name_plural': 'participações em monitorias',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HorarioDisponivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ativo', models.BooleanField(db_index=True, default=True, verbose_name='ativo')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Segunda-feira'), (1, 'Terça-feira'), (2, 'Quarta-feira'), (3, 'Quinta-feira'), (4, 'Sexta-feira'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='dia da semana')),
                ('horario_inicio', models.TimeField(verbose_name='horário de início')),
                ('horario_fim', models.TimeField(verbose_name='horário de término')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios_disponiveis', to='gestao_monitoria.alunoprofile', verbose_name='monitor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='gestao_monitoria.turma', verbose_name='turma')),
            ],
            options={
                'verbose_name': 'horário disponível',
                'verbose_name_plural': 'horários disponíveis',
                'ordering': ['dia_semana', 'horario_inicio'],
            },
        ),
        migrations.CreateModel(
            name='AgendamentoMonitoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('data', models.DateField(verbose_name='data')),
                ('horario_inicio', models.TimeField(verbose_name='horário de início')),
                ('horario_fim', models.TimeField(verbose_name='horário de término')),
                ('assunto', models.CharField(max_length=200, verbose_name='assunto')),
                ('descricao', models.TextField(blank=True, verbose_name='descrição')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('cancelado', 'Cancelado'), ('concluido', 'Concluído')], db_index=True, default='pendente', max_length=20, verbose_name='status')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='gestao_monitoria.alunoprofile', verbose_name='aluno')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='monitorias_agendadas', to='gestao_monitoria.alunoprofile', verbose_name='monitor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='gestao_monitoria.turma', verbose_name='turma')),
            ],
            options={
                'verbose_name': 'agendamento de monitoria',
                'verbose_name_plural': 'agendamentos de monitoria',
                'ordering': ['-data', '-horario_inicio'],
            },
        ),
        migrations.CreateModel(
            name='TurmaDiaSemana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.IntegerField(choices=[(0, 'Segunda-feira'), (1, 'Terça-feira'), (2, 'Quarta-feira'), (3, 'Quinta-feira'), (4, 'Sexta-feira'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='dia da semana')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias_semana', to='gestao_monitoria.turma')),
            ],
            options={
                'verbose_name': 'dia da semana da turma',
                'verbose_name_plural': 'dias da semana das turmas',
                'ordering': ['dia'],
            },
        ),
        migrations.CreateModel(
            name='Vaga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('ativo', models.BooleanField(db_index=True, default=True, verbose_name='ativo')),
                ('nome', models.CharField(max_length=150, verbose_name='nome')),
                ('descricao', models.TextField(verbose_name='descrição')),
                ('requisitos', models.TextField(verbose_name='requisitos')),
                ('vagas_disponiveis', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='vagas disponíveis')),
                ('coordenador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vagas_coordenadas', to='gestao_monitoria.funcionarioprofile', verbose_name='coordenador')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas', to='gestao_monitoria.curso', verbose_name='curso')),
                ('monitores', models.ManyToManyField(blank=True, related_name='vagas_monitoria', through='gestao_monitoria.Inscricao', to='gestao_monitoria.alunoprofile', verbose_name='monitores')),
            ],
            options={
                'verbose_name': 'vaga de monitoria',
                'verbose_name_plural': 'vagas de monitoria',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='turma',
            name='vaga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='gestao_monitoria.vaga', verbose_name='vaga'),
        ),
        migrations.AddField(
            model_name='inscricao',
            name='vaga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscricoes', to='gestao_monitoria.vaga', verbose_name='vaga'),
        ),
        migrations.AddIndex(
            model_name='alunoprofile',
            index=models.Index(fields=['matricula', 'ativo'], name='gestao_moni_matricu_940caa_idx'),
        ),
        migrations.AddIndex(
            model_name='alunoprofile',
            index=models.Index(fields=['curso', 'periodo'], name='gestao_moni_curso_i_eb0a14_idx'),
        ),
        migrations.AddIndex(
            model_name='submissaohoras',
            index=models.Index(fields=['status', 'mes_referencia'], name='gestao_moni_status_72a8d3_idx'),
        ),
        migrations.AddIndex(
            model_name='submissaohoras',
            index=models.Index(fields=['monitor', 'mes_referencia'], name='gestao_moni_monitor_379d12_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='submissaohoras',
            unique_together={('monitor', 'turma', 'mes_referencia')},
        ),
        migrations.AddIndex(
            model_name='presenca',
            index=models.Index(fields=['turma', 'data'], name='gestao_moni_turma_i_5bd2f2_idx'),
        ),
        migrations.AddIndex(
            model_name='presenca',
            index=models.Index(fields=['aluno', 'data'], name='gestao_moni_aluno_i_6c9967_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='presenca',
            unique_together={('turma', 'aluno', 'data')},
        ),
        migrations.AlterUniqueTogether(
            name='participacaomonitoria',
            unique_together={('aluno', 'turma')},
        ),
        migrations.AddConstraint(
            model_name='horariodisponivel',
            constraint=models.CheckConstraint(condition=models.Q(('horario_fim__gt', models.F('horario_inicio'))), name='horario_disponivel_valido'),
        ),
        migrations.AddIndex(
            model_name='agendamentomonitoria',
            index=models.Index(fields=['monitor', 'data'], name='gestao_moni_monitor_612a28_idx'),
        ),
        migrations.AddIndex(
            model_name='agendamentomonitoria',
            index=models.Index(fields=['aluno', 'data'], name='gestao_moni_aluno_i_ccb3f2_idx'),
        ),
        migrations.AddIndex(
            model_name='agendamentomonitoria',
            index=models.Index(fields=['status', 'data'], name='gestao_moni_status_ecc2de_idx'),
        ),
        migrations.AddConstraint(
            model_name='agendamentomonitoria',
            constraint=models.CheckConstraint(condition=models.Q(('horario_fim__gt', models.F('horario_inicio'))), name='agendamento_horario_valido'),
        ),
        migrations.AlterUniqueTogether(
            name='turmadiasemana',
            unique_together={('turma', 'dia')},
        ),
        migrations.AddIndex(
            model_name='vaga',
            index=models.Index(fields=['curso', 'ativo'], name='gestao_moni_curso_i_b741fb_idx'),
        ),
        migrations.AddIndex(
            model_name='vaga',
            index=models.Index(fields=['coordenador', 'ativo'], name='gestao_moni_coorden_4dca1c_idx'),
        ),
        migrations.AddIndex(
            model_name='turma',
            index=models.Index(fields=['curso', 'ativo'], name='gestao_moni_curso_i_c82928_idx'),
        ),
        migrations.AddIndex(
            model_name='turma',
            index=models.Index(fields=['monitor', 'ativo'], name='gestao_moni_monitor_d72b3a_idx'),
        ),
        migrations.AddIndex(
            model_name='turma',
            index=models.Index(fields=['data_inicio', 'data_fim'], name='gestao_moni_data_in_84ebe4_idx'),
        ),
        migrations.AddConstraint(
            model_name='turma',
            constraint=models.CheckConstraint(condition=models.Q(('data_fim__gte', models.F('data_inicio'))), name='turma_data_fim_valida'),
        ),
        migrations.AddConstraint(
            model_name='turma',
            constraint=models.CheckConstraint(condition=models.Q(('hora_fim__gt', models.F('hora_inicio'))), name='turma_hora_fim_valida'),
        ),
        migrations.AddIndex(
            model_name='inscricao',
            index=models.Index(fields=['status', 'created_at'], name='gestao_moni_status_3d31d1_idx'),
        ),
        migrations.AddIndex(
            model_name='inscricao',
            index=models.Index(fields=['vaga', 'status'], name='gestao_moni_vaga_id_44ed27_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inscricao',
            unique_together={('aluno', 'vaga')},
        ),
    ]
